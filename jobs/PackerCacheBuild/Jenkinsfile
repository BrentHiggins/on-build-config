import groovy.transform.Field;
@Field def shareMethod
node{
    deleteDir()
    checkout scm
    shareMethod = load("jobs/ShareMethod.groovy")
}

def cacheBuild(ArrayList<String> used_resources, String BUILD_TYPE){
    String label_name = "packer"
    lock(label:label_name,quantity:1){
        String node_name = shareMethod.occupyAvailableLockedResource(label_name, used_resources)
        try{
            node(node_name){
                deleteDir()
                def url = "https://github.com/RackHD/RackHD.git"
                def branch = "master"
                def targetDir = "RackHD"
                shareMethod.checkout(url, branch, targetDir)
                withEnv([
                    "OS_VER=${env.OS_VER}",
                    "BUILD_STAGE=BUILD_TEMPLATE",
                    "BUILD_TYPE=$BUILD_TYPE"
                ]){
                    try{
                        sh '''#!/bin/bash -x
                        set +e
                        pushd RackHD/packer
                        pkill packer
                        rm ~/VirtualBox\\ VMs/rackhd-${OS_VER} -rf
                        set -e
                        ./HWIMO-BUILD
                        popd
                        '''
                        archiveArtifacts "RackHD/packer/output-*/*.*"
                    } finally{
                        sh '''#!/bin/bash -x
                        set +e
                        pkill packer
                        rm ~/VirtualBox\\ VMs/rackhd-${OS_VER} -rf
                        '''
                    }
                }
            }
        } finally{
            used_resources.remove(node_name)
        }
    }
}

timestamps{
    stage("Cache Packer"){
        def build_branches = [:]
        def used_resources = []

        build_branches["Cache Virtualbox"] = {
            cacheBuild(used_resources, "virtualbox")
        }
        build_branches["Cache Vmware"] = {
            cacheBuild(used_resources, "vmware")
        }
        parallel build_branches
    }
}
